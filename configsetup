#!/bin/bash

src=$(pwd)
out=~

config_src=config
script_src=script
config=.config
script=.local/bin

type=0

do_action() {
  if [[ "$type" = "install" ]]; then
    eval "ln -snf \"$src/$1\" \"$out/$2\""
  elif  [[ "$type" = "uninstall" ]]; then
    eval "rm -rf \"$out/$2\""
  elif  [[ "$type" = "execute" ]]; then
    eval "chmod +x \"$out/$2\""
  fi
}

process() {
  do_action zshrc .zshrc
  do_action zprofile .zprofile
  do_action profile .profile
  do_action gitconfig .gitconfig
  do_action goldendict .goldendict
  do_action Xresources .Xresources
  do_action dmenurc .dmenurc
  do_action dir_colors .dir_colors
  do_action fonts .fonts
  do_action dircolors .dircolors
  do_action backgrounds .backgrounds
  do_action .antigen .antigen
  do_action p10k.zsh .p10k.zsh
  do_action ripgreprc .ripgreprc
}

process_xdg() {
  do_action $config_src/nvim $config/nvim
  do_action $config_src/i3 $config/i3
  do_action $config_src/sway $config/sway
  do_action $config_src/i3status $config/i3status
  do_action $config_src/i3status-rust $config/i3status-rust
  do_action $config_src/dunst $config/dunst
  do_action $config_src/kitty $config/kitty
  do_action $config_src/ranger $config/ranger
  do_action $config_src/pulseaudio-ctl $config/pulseaudio-ctl
  do_action $config_src/polybar $config/polybar
  do_action $config_src/conky $config/conky
  do_action $config_src/geoclue $config/geoclue
  do_action $config_src/zathura $config/zathura
  do_action $config_src/dmenu-recent $config/dmenu-recent
  do_action $config_src/btop $config/btop
  do_action $config_src/ncmpcpp $config/ncmpcpp
  do_action $config_src/mpd $config/mpd
  do_action $config_src/neofetch $config/neofetch
  do_action $config_src/morc_menu $config/morc_menu
  do_action $config_src/qutebrowser $config/qutebrowser
  do_action $config_src/picom.conf $config/picom.conf
  do_action $config_src/redshift.conf $config/redshift.conf
  do_action $config_src/shalarm $config/shalarm
  do_action $config_src/vimiv $config/vimiv
  do_action $config_src/starship.toml $config/starship.toml
  do_action $config_src/tbsm $config/tbsm
  do_action $config_src/wezterm $config/wezterm
  do_action $config_src/swaylock $config/swaylock
  do_action $config_src/waybar $config/waybar
  do_action $config_src/mako $config/mako
  do_action $config_src/gtk-3.0 $config/gtk-3.0
  do_action $config_src/goneovim $config/goneovim
  do_action $config_src/xfce4 $config/xfce4
  do_action $config_src/paru $config/paru
  do_action $config_src/safeeyes $config/safeeyes
  do_action $config_src/zsh $config/zsh
}

process_script() {
  do_action $script_src/brave-popup $script/brave-popup
  do_action $script_src/simplescrot $script/simplescrot
  do_action $script_src/shalarm $script/shalarm
  do_action $script_src/i3lock-color $script/i3lock-color
  do_action $script_src/i3lock-blur $script/i3lock-blur
  do_action $script_src/switch_ibus_engine $script/switch_ibus_engine
  do_action $script_src/switch_brightness $script/switch_brightness
  do_action $script_src/my_dmenu_recency $script/my_dmenu_recency
  do_action $script_src/sway-prop $script/sway-prop
  do_action $script_src/import-gsettings $script/import-gsettings
  do_action $script_src/nvimdiff $script/nvimdiff
  do_action $script_src/google-chrome $script/google-chrome
}

print_help() {
  echo "A script to setup config."
  echo
  echo "Syntax: configsetup [-i|u|h]"
  echo "options:"
  echo "i     Install config."
  echo "u     Uninstall config."
  echo "h     Print this Help."
  echo "x     Make scripts excutable."
  echo
}

if [[ "$#" -eq 0 ]]; then
  print_help
  exit 0
fi

while getopts ":hiux" option; do
  case $option in
    h) # display HELP
      print_help
      exit 0;;
    i) # install config
      # process_install
      type=install
      process
      process_xdg
      process_script
      exit 0;;
    u) # uninstall config
      # process_uninstall
      type=uninstall
      process
      process_xdg
      process_script
      exit 0;;
    x) # uninstall config
      type=execute
      process_script
      exit 0;;
    \?) # invalid option
      echo "Error: Invalid option"
      exit 1;;
  esac
done
